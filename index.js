// Generated by CoffeeScript 1.6.3
(function() {
  var dedelimit, insertDelimitedKey, _;

  _ = require("underscore");

  insertDelimitedKey = function(objRef, keyList, val) {
    var lastIndex, _currentIndex, _currentScope;
    lastIndex = keyList.length - 1;
    _currentIndex = 0;
    _currentScope = objRef;
    return _.each(keyList, function(aKey) {
      if (_.has(_currentScope, aKey)) {
        if (_currentIndex !== lastIndex) {
          _currentScope = _currentScope[aKey];
          return _currentIndex++;
        }
      } else {
        if (_currentIndex === lastIndex) {
          return _currentScope[aKey] = val;
        } else {
          _currentScope[aKey] = {};
          _currentScope = _currentScope[aKey];
          return _currentIndex++;
        }
      }
    });
  };

  dedelimit = (function() {
    var _defaultOpts;
    _defaultOpts = {
      delimiter: "."
    };
    return function(keyVals, options, callback) {
      var _obj;
      if (_.isFunction(options)) {
        callback = options;
        options = _.clone(_defaultOpts);
      } else {
        options = _.merge({}, _defaultOpts, options);
      }
      _obj = {};
      _.each(_.keys(keyVals), function(oneKey) {
        var splitKey;
        splitKey = oneKey.split(options.delimiter);
        return insertDelimitedKey(_obj, splitKey, keyVals[oneKey]);
      });
      return process.nextTick(function() {
        return callback(null, _obj);
      });
    };
  })();

  module.exports = {
    dedelimit: dedelimit,
    insertDelimitedKey: insertDelimitedKey
  };

}).call(this);
